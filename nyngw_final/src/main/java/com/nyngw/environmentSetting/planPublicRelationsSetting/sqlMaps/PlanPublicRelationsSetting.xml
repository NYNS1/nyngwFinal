<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyngw.environmentSetting.planPublicRelationsSetting.dao.PlanPublicRelationsSettingDao">
	
	<!-- 회사정보(로고제외) 수정 -->
	<update id="updateCompanyInfo" parameterType="com.nyngw.dto.CompanyVO">
		update company set 
			company_name=#{company_name}, 
			company_tel=#{company_tel},
			company_zip=#{company_zip},
			company_addr1=#{company_addr1},
			company_addr2=#{company_addr2}
		where company_number = #{company_number}
	</update>
	
	<!-- 회사로고경로 수정 -->
	<update id="updateCompanyLogo" parameterType="map">
		update company set 
			company_logo=#{company_logo} 
		where company_number = #{company_number}
	</update>
	
	<!-- 회사정보(로고제외) 등록 -->
	<update id="insertCompanyInfo" parameterType="com.nyngw.dto.CompanyVO">
		insert into company (company_number,company_name,company_tel,company_zip,company_addr1,company_addr2)
		values (com_seq.nextval, #{company_name},#{company_tel},#{company_zip},#{company_addr1},#{company_addr2})
	</update>
	
	<!-- 직급정보(View) 조회 -->
	<select id="esSelectDepartmentView" resultType="com.nyngw.dto.DepartmentViewVO">
		select 
		  dept_number,
		  dept_name,
		  dept_membernumber,
		  dept_tel,
		  dept_level,
		  dept_addr,
		  dept_parents,
		  mem_number,
		  mem_name,
		  mem_position_number,
		  position_number,
		  position_name
		from dept_view
		order by dept_level, dept_name
	</select>
	
	<select id="esSelectUpperMember" resultType="com.nyngw.dto.DepartmentViewVO">
		select 
			mem_number,
			mem_name,
			mem_position_number,
			position_number,
			position_name
		from dept_view
		where mem_position_number in ('position1', 'position2', 'position3')
		order by position_number
	</select>
	
	<!-- 직급정보 등록 -->
	<update id="esInsertDepartment" parameterType="com.nyngw.dto.DepartmentVO">
		insert into department (dept_number, dept_name, dept_membernumber, dept_tel, dept_level, dept_addr, dept_parents)
		values ('dept'||dept_seq.nextval, #{dept_name},#{dept_membernumber},#{dept_tel},#{dept_level},#{dept_addr},#{dept_parents})
	</update>
	
	<!-- 직급레벨 정하기위한 상위직급레벨 가져오기 -->
	<select id="esSelectDeptLevel" parameterType="java.lang.String" resultType="com.nyngw.dto.DepartmentVO">
		select 
			dept_level
		from department
		where dept_number=#{dept_number}
	</select>
	
	<!-- 하나의 직급정보를 가져오기 -->
	<select id="esSelectOneDept" parameterType="java.lang.String" resultType="com.nyngw.dto.DepartmentVO">
		select
			* 
		from department
		where dept_number=#{dept_number}
	</select>
	
	<!-- 직급정보 수정 -->
	<update id="esUpdateDepartment" parameterType="com.nyngw.dto.DepartmentVO">
		update company set 
			company_logo=#{company_logo} 
		where company_number = #{company_number}
	</update>
	
	<!-- 직급정보 삭제 -->
	<update id="esDeleteDepartment" parameterType="java.lang.String">
		delete from department where dept_number=#{deleteDeptNum}
	</update>
</mapper>